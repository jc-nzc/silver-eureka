{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jorgecano/Documents/github/repository/silver-eureka/src/searchMovies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport MovieCard from './src/movieCard.js';\nexport default function SearchMovies() {\n  _s();\n\n  //states -input query, movies\n  const [query, setQuery] = useState(''); //create the state for the movies, and update that state appropriately\n\n  const [movies, setMovies] = useState([]);\n\n  const searchMovies = async e => {\n    e.preventDefault(); // console.log(\"submitting\");\n    // const query = \"One flew over the cuckoo's nest\";\n\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=f7608f6360f6fbdaa618b9e61bf22029&language=en-US&query=${query}&page=1&include_adult=false`; // const res = await fetch(url);\n    // const data  = await res.json();\n    // console.log(data);\n\n    try {\n      const res = await fetch(url);\n      const data = await res.json();\n      console.log(data.results);\n      setMovies(data.results);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: searchMovies,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        htmlFor: \"query\",\n        children: \"Movie Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        name: \"query\",\n        placeholder: \"i.e. Jurassic Park\",\n        value: query,\n        onChange: e => setQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-list\",\n      children: movies.filter(movie => movie.poster_path).map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this) // <div className=\"card\" key={movie.id}>\n      //     <img className=\"card--image\"\n      //         src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`}\n      //         alt={movie.title + ' poster'}\n      //         />\n      //     <div className=\"card--content\">\n      //     <h3 className=\"card--title\">{movie.title}</h3>\n      //     <p><small>RELEASE DATE: {movie.release_date}</small></p>\n      //     <p><small>RATING: {movie.vote_average}</small></p>\n      //     <p className=\"card--desc\">{movie.overview}</p>\n      //     </div>\n      //\n      // </div>\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SearchMovies, \"A5Q53hr/y+zqHAz15wFmuqejARs=\");\n\n_c = SearchMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchMovies\");","map":{"version":3,"sources":["/Users/jorgecano/Documents/github/repository/silver-eureka/src/searchMovies.js"],"names":["React","useState","MovieCard","SearchMovies","query","setQuery","movies","setMovies","searchMovies","e","preventDefault","url","res","fetch","data","json","console","log","results","err","error","target","value","filter","movie","poster_path","map","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,eAAe,SAASC,YAAT,GAAuB;AAAA;;AAElC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC,CAHkC,CAIlC;;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;;AAGA,QAAMO,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF,GAD8B,CAE9B;AAEA;;AAEA,UAAMC,GAAG,GAAI,2GAA0GP,KAAM,6BAA7H,CAN8B,CAQ9B;AACA;AACA;;AACA,QAAI;AACA,YAAMQ,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAvB;AACA,YAAMG,IAAI,GAAI,MAAMF,GAAG,CAACG,IAAJ,EAApB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,OAAjB;AACAX,MAAAA,SAAS,CAACO,IAAI,CAACI,OAAN,CAAT;AACH,KALD,CAKC,OAAMC,GAAN,EAAU;AACPH,MAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACH;AACJ,GAnBD;;AAqBA,sBACE;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,QAAQ,EAAEX,YAAjC;AAAA,8BACI;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAyB,QAAA,OAAO,EAAC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAyB,QAAA,IAAI,EAAC,MAA9B;AAAqC,QAAA,IAAI,EAAC,OAA1C;AACI,QAAA,WAAW,EAAC,oBADhB;AAEI,QAAA,KAAK,EAAEJ,KAFX;AAEkB,QAAA,QAAQ,EAAGK,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACY,MAAF,CAASC,KAAV;AAF3C;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,IAAI,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACKhB,MAAM,CAACiB,MAAP,CAAcC,KAAK,IAAIA,KAAK,CAACC,WAA7B,EAA0CC,GAA1C,CAA8CF,KAAK,iBAClD,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEA;AAAlB,SAA8BA,KAAK,CAACG,EAApC;AAAA;AAAA;AAAA;AAAA,cADkD,CAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdH;AADL;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADF;AA8BH;;GA3DuBxB,Y;;KAAAA,Y","sourcesContent":["import React, {useState} from \"react\";\nimport MovieCard from './src/movieCard.js';\nexport default function SearchMovies(){\n\n    //states -input query, movies\n    const [query, setQuery] = useState('');\n    //create the state for the movies, and update that state appropriately\n    const [movies, setMovies] = useState([]);\n\n\n    const searchMovies = async (e) => {\n        e.preventDefault()\n        // console.log(\"submitting\");\n\n        // const query = \"One flew over the cuckoo's nest\";\n\n        const url = `https://api.themoviedb.org/3/search/movie?api_key=f7608f6360f6fbdaa618b9e61bf22029&language=en-US&query=${query}&page=1&include_adult=false`;\n\n        // const res = await fetch(url);\n        // const data  = await res.json();\n        // console.log(data);\n        try {\n            const res = await fetch(url);\n            const data  = await res.json();\n            console.log(data.results);\n            setMovies(data.results);\n        }catch(err){\n            console.error(err);\n        }\n    }\n\n    return (\n      <>\n        <form className=\"form\" onSubmit={searchMovies}>\n            <label className=\"label\" htmlFor=\"query\">Movie Name</label>\n            <input className=\"input\" type=\"text\" name=\"query\"\n                placeholder=\"i.e. Jurassic Park\"\n                value={query} onChange={(e) => setQuery(e.target.value)}\n                />\n            <button className=\"button\" type=\"submit\">Search</button>\n        </form>\n        <div className=\"card-list\">\n            {movies.filter(movie => movie.poster_path).map(movie => (\n              <MovieCard movie={movie} key={movie.id} />\n                // <div className=\"card\" key={movie.id}>\n                //     <img className=\"card--image\"\n                //         src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`}\n                //         alt={movie.title + ' poster'}\n                //         />\n                //     <div className=\"card--content\">\n                //     <h3 className=\"card--title\">{movie.title}</h3>\n                //     <p><small>RELEASE DATE: {movie.release_date}</small></p>\n                //     <p><small>RATING: {movie.vote_average}</small></p>\n                //     <p className=\"card--desc\">{movie.overview}</p>\n                //     </div>\n                //\n                // </div>\n            ))}\n        </div>\n      </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}