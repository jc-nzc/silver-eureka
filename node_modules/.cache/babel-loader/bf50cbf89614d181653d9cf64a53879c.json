{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jorgecano/Documents/github/repository/silver-eureka/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jorgecano/Documents/github/repository/silver-eureka/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/jorgecano/Documents/github/repository/silver-eureka/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import React,{useState}from\"react\";import MovieCard from'./movieCard.js';export default function SearchMovies(){//states -input query, movies\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),query=_useState2[0],setQuery=_useState2[1];//create the state for the movies, and update that state appropriately\nvar _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),movies=_useState4[0],setMovies=_useState4[1];var searchMovies=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var url,res,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();// console.log(\"submitting\");\n// const query = \"One flew over the cuckoo's nest\";\nurl=\"https://api.themoviedb.org/3/search/movie?api_key=f7608f6360f6fbdaa618b9e61bf22029&language=en-US&query=\".concat(query,\"&page=1&include_adult=false\");// const res = await fetch(url);\n// const data  = await res.json();\n// console.log(data);\n_context.prev=2;_context.next=5;return fetch(url);case 5:res=_context.sent;_context.next=8;return res.json();case 8:data=_context.sent;console.log(data.results);setMovies(data.results);_context.next=16;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](2);console.error(_context.t0);case 16:case\"end\":return _context.stop();}}},_callee,null,[[2,13]]);}));return function searchMovies(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"form\",{className:\"form\",onSubmit:searchMovies,children:[/*#__PURE__*/_jsx(\"label\",{className:\"label\",htmlFor:\"query\",children:\"Movie Name\"}),/*#__PURE__*/_jsx(\"input\",{className:\"input\",type:\"text\",name:\"query\",placeholder:\"i.e. Jurassic Park\",value:query,onChange:function onChange(e){return setQuery(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",type:\"submit\",children:\"Search\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-list\",children:movies.filter(function(movie){return movie.poster_path;}).map(function(movie){return/*#__PURE__*/_jsx(MovieCard,{movie:movie},movie.id)// <div className=\"card\" key={movie.id}>\n//     <img className=\"card--image\"\n//         src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`}\n//         alt={movie.title + ' poster'}\n//         />\n//     <div className=\"card--content\">\n//     <h3 className=\"card--title\">{movie.title}</h3>\n//     <p><small>RELEASE DATE: {movie.release_date}</small></p>\n//     <p><small>RATING: {movie.vote_average}</small></p>\n//     <p className=\"card--desc\">{movie.overview}</p>\n//     </div>\n//\n// </div>\n;})})]});}","map":{"version":3,"sources":["/Users/jorgecano/Documents/github/repository/silver-eureka/src/searchMovies.js"],"names":["React","useState","MovieCard","SearchMovies","query","setQuery","movies","setMovies","searchMovies","e","preventDefault","url","fetch","res","json","data","console","log","results","error","target","value","filter","movie","poster_path","map","id"],"mappings":"6pBAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,CAAAA,SAAP,KAAsB,gBAAtB,CACA,cAAe,SAASC,CAAAA,YAAT,EAAuB,CAElC;AAFkC,cAGRF,QAAQ,CAAC,EAAD,CAHA,wCAG3BG,KAH2B,eAGpBC,QAHoB,eAIlC;AAJkC,eAKNJ,QAAQ,CAAC,EAAD,CALF,yCAK3BK,MAL2B,eAKnBC,SALmB,eAQlC,GAAMC,CAAAA,YAAY,0FAAG,iBAAOC,CAAP,mIACjBA,CAAC,CAACC,cAAF,GACA;AAEA;AAEMC,GANW,mHAMsGP,KANtG,gCAQjB;AACA;AACA;AAViB,sCAYKQ,CAAAA,KAAK,CAACD,GAAD,CAZV,QAYPE,GAZO,qCAaOA,CAAAA,GAAG,CAACC,IAAJ,EAbP,QAaPC,IAbO,eAcbC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,OAAjB,EACAX,SAAS,CAACQ,IAAI,CAACG,OAAN,CAAT,CAfa,iFAiBbF,OAAO,CAACG,KAAR,cAjBa,qEAAH,kBAAZX,CAAAA,YAAY,4CAAlB,CAqBA,mBACE,wCACE,cAAM,SAAS,CAAC,MAAhB,CAAuB,QAAQ,CAAEA,YAAjC,wBACI,cAAO,SAAS,CAAC,OAAjB,CAAyB,OAAO,CAAC,OAAjC,wBADJ,cAEI,cAAO,SAAS,CAAC,OAAjB,CAAyB,IAAI,CAAC,MAA9B,CAAqC,IAAI,CAAC,OAA1C,CACI,WAAW,CAAC,oBADhB,CAEI,KAAK,CAAEJ,KAFX,CAEkB,QAAQ,CAAE,kBAACK,CAAD,QAAOJ,CAAAA,QAAQ,CAACI,CAAC,CAACW,MAAF,CAASC,KAAV,CAAf,EAF5B,EAFJ,cAMI,eAAQ,SAAS,CAAC,QAAlB,CAA2B,IAAI,CAAC,QAAhC,oBANJ,GADF,cASE,YAAK,SAAS,CAAC,WAAf,UACKf,MAAM,CAACgB,MAAP,CAAc,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,WAAV,EAAnB,EAA0CC,GAA1C,CAA8C,SAAAF,KAAK,qBAClD,KAAC,SAAD,EAAW,KAAK,CAAEA,KAAlB,EAA8BA,KAAK,CAACG,EAApC,CACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdgD,EAAnD,CADL,EATF,GADF,CA8BH","sourcesContent":["import React, {useState} from \"react\";\nimport MovieCard from './movieCard.js';\nexport default function SearchMovies(){\n\n    //states -input query, movies\n    const [query, setQuery] = useState('');\n    //create the state for the movies, and update that state appropriately\n    const [movies, setMovies] = useState([]);\n\n\n    const searchMovies = async (e) => {\n        e.preventDefault()\n        // console.log(\"submitting\");\n\n        // const query = \"One flew over the cuckoo's nest\";\n\n        const url = `https://api.themoviedb.org/3/search/movie?api_key=f7608f6360f6fbdaa618b9e61bf22029&language=en-US&query=${query}&page=1&include_adult=false`;\n\n        // const res = await fetch(url);\n        // const data  = await res.json();\n        // console.log(data);\n        try {\n            const res = await fetch(url);\n            const data  = await res.json();\n            console.log(data.results);\n            setMovies(data.results);\n        }catch(err){\n            console.error(err);\n        }\n    }\n\n    return (\n      <>\n        <form className=\"form\" onSubmit={searchMovies}>\n            <label className=\"label\" htmlFor=\"query\">Movie Name</label>\n            <input className=\"input\" type=\"text\" name=\"query\"\n                placeholder=\"i.e. Jurassic Park\"\n                value={query} onChange={(e) => setQuery(e.target.value)}\n                />\n            <button className=\"button\" type=\"submit\">Search</button>\n        </form>\n        <div className=\"card-list\">\n            {movies.filter(movie => movie.poster_path).map(movie => (\n              <MovieCard movie={movie} key={movie.id} />\n                // <div className=\"card\" key={movie.id}>\n                //     <img className=\"card--image\"\n                //         src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`}\n                //         alt={movie.title + ' poster'}\n                //         />\n                //     <div className=\"card--content\">\n                //     <h3 className=\"card--title\">{movie.title}</h3>\n                //     <p><small>RELEASE DATE: {movie.release_date}</small></p>\n                //     <p><small>RATING: {movie.vote_average}</small></p>\n                //     <p className=\"card--desc\">{movie.overview}</p>\n                //     </div>\n                //\n                // </div>\n            ))}\n        </div>\n      </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}